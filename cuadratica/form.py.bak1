#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.20
#  in conjunction with Tcl version 8.6
#    Feb 14, 2019 11:58:25 AM EST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import form_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Ecuacion_cuadratica (root)
    form_support.init(root, top)
    root.mainloop()

w = None
def create_Ecuacion_cuadratica(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Ecuacion_cuadratica (w)
    form_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Ecuacion_cuadratica():
    global w
    w.destroy()
    w = None

class Ecuacion_cuadratica:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        font10 = "-family {Segoe UI} -size 14 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        font12 = "-family {Segoe UI} -size 19 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font13 = "-family {Segoe UI} -size 13 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("376x366+430+117")
        top.title("Ecuación Cuadrática")
        top.configure(background="#d9d9d9")

        self.principal_frame = tk.Frame(top)
        self.principal_frame.place(relx=0.013, rely=0.0, relheight=0.97
                , relwidth=0.971)
        self.principal_frame.configure(relief='groove')
        self.principal_frame.configure(borderwidth="2")
        self.principal_frame.configure(relief='groove')
        self.principal_frame.configure(background="#d9d9d9")
        self.principal_frame.configure(width=365)

        self.component_a = ttk.Entry(self.principal_frame)
        self.component_a.place(relx=0.055, rely=0.155, relheight=0.059
                , relwidth=0.181)
        self.component_a.configure(font=font13)
        self.component_a.configure(justify='center')
        self.component_a.configure(width=66)
        self.component_a.configure(foreground="#000000")
        self.component_a.configure(takefocus="")
        self.component_a.configure(cursor="ibeam")

        self.theXSQ = ttk.Label(self.principal_frame)
        self.theXSQ.place(relx=0.247, rely=0.141, height=29, width=46)
        self.theXSQ.configure(background="#d9d9d9")
        self.theXSQ.configure(foreground="#000000")
        self.theXSQ.configure(font=font10)
        self.theXSQ.configure(relief='flat')
        self.theXSQ.configure(text='''X² +''')
        self.theXSQ.configure(width=46)
        self.theXSQ.configure(cursor="fleur")

        self.component_b = ttk.Entry(self.principal_frame)
        self.component_b.place(relx=0.384, rely=0.155, relheight=0.059
                , relwidth=0.181)
        self.component_b.configure(font=font13)
        self.component_b.configure(justify='center')
        self.component_b.configure(width=66)
        self.component_b.configure(takefocus="")
        self.component_b.configure(cursor="ibeam")

        self.theX_1 = ttk.Label(self.principal_frame)
        self.theX_1.place(relx=0.562, rely=0.141, height=29, width=46)
        self.theX_1.configure(background="#d9d9d9")
        self.theX_1.configure(foreground="#000000")
        self.theX_1.configure(font=font10)
        self.theX_1.configure(relief='flat')
        self.theX_1.configure(text='''X +''')

        self.component_c = ttk.Entry(self.principal_frame)
        self.component_c.place(relx=0.658, rely=0.155, relheight=0.059
                , relwidth=0.181)
        self.component_c.configure(font=font13)
        self.component_c.configure(justify='center')
        self.component_c.configure(width=66)
        self.component_c.configure(takefocus="")
        self.component_c.configure(cursor="ibeam")

        self.TLabel2 = ttk.Label(self.principal_frame)
        self.TLabel2.place(relx=0.849, rely=0.141, height=29, width=45)
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font=font10)
        self.TLabel2.configure(relief='flat')
        self.TLabel2.configure(text='''= 0''')
        self.TLabel2.configure(width=45)

        self.titulo = ttk.Label(self.principal_frame)
        self.titulo.place(relx=0.192, rely=0.028, height=39, width=247)
        self.titulo.configure(background="#d9d9d9")
        self.titulo.configure(foreground="#000000")
        self.titulo.configure(font=font12)
        self.titulo.configure(relief='flat')
        self.titulo.configure(text='''Ecuación Cuadrática''')
        self.titulo.configure(width=247)

        self.btn_Calcular = ttk.Button(self.principal_frame)
        self.btn_Calcular.place(relx=0.027, rely=0.282, height=45, width=346)
        self.btn_Calcular.configure(takefocus="")
        self.btn_Calcular.configure(text='''Calcular''')
        self.btn_Calcular.configure(width=346)

        self.result_x1 = ttk.Label(self.principal_frame)
        self.result_x1.place(relx=0.082, rely=0.451, height=29, width=56)
        self.result_x1.configure(background="#d9d9d9")
        self.result_x1.configure(foreground="#000000")
        self.result_x1.configure(font=font10)
        self.result_x1.configure(relief='flat')
        self.result_x1.configure(text='''X1:''')
        self.result_x1.configure(width=56)

        self.result_x2 = ttk.Label(self.principal_frame)
        self.result_x2.place(relx=0.575, rely=0.451, height=29, width=56)
        self.result_x2.configure(background="#d9d9d9")
        self.result_x2.configure(foreground="#000000")
        self.result_x2.configure(font=font10)
        self.result_x2.configure(relief='flat')
        self.result_x2.configure(text='''X2:''')

        self.sol_x1 = ttk.Entry(self.principal_frame)
        self.sol_x1.place(relx=0.178, rely=0.465, relheight=0.059
                , relwidth=0.181)
        self.sol_x1.configure(width=66)
        self.sol_x1.configure(takefocus="")
        self.sol_x1.configure(cursor="ibeam")

        self.sol_x2 = ttk.Entry(self.principal_frame)
        self.sol_x2.place(relx=0.658, rely=0.465, relheight=0.059
                , relwidth=0.208)
        self.sol_x2.configure(width=76)
        self.sol_x2.configure(takefocus="")
        self.sol_x2.configure(cursor="ibeam")

        self.comment = tk.Text(self.principal_frame)
        self.comment.place(relx=0.082, rely=0.563, relheight=0.18
                , relwidth=0.833)
        self.comment.configure(background="white")
        self.comment.configure(font="TkTextFont")
        self.comment.configure(foreground="black")
        self.comment.configure(highlightbackground="#d9d9d9")
        self.comment.configure(highlightcolor="black")
        self.comment.configure(insertbackground="black")
        self.comment.configure(selectbackground="#c4c4c4")
        self.comment.configure(selectforeground="black")
        self.comment.configure(width=304)
        self.comment.configure(wrap='word')

        self.btnGraficar = ttk.Button(self.principal_frame)
        self.btnGraficar.place(relx=0.041, rely=0.789, height=55, width=336)
        self.btnGraficar.configure(takefocus="")
        self.btnGraficar.configure(text='''Graficar''')
        self.btnGraficar.configure(width=336)

if __name__ == '__main__':
    vp_start_gui()





